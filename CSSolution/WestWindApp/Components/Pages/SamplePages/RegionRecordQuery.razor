@page "/singlequery"
<PageTitle>Single Query</PageTitle>
@rendermode InteractiveServer

<!-- additional namespaces-->
@using WestWindSystem.BLL;
@using WestWindSystem.Entities;

<h1>Region Query</h1>
<h4>... single record query</h4>

@if (feedBackMsg.Length > 0)
{
    <div class="alert alert-info">
        <p>@feedBackMsg</p>
    </div>
}

@if (errorMsgs.Count > 0)
{
    <div class="alert alert-danger">
        <p>Please fix the following issues:</p>
        <ul>
            @foreach (var error in errorMsgs)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}

<!-- create the form for the query-->
@*
    form area
    standard html controls
    use bootstrap for formating
    form will be two column
*@

<div class="row">
    <div class="col-md-6">
        <!-- this column will hold the query input controls and buttons-->
        <p><strong>Input query values</strong></p>
        <label for="regionid">Enter a region id:</label>&nbsp;&nbsp;
        <input id="regionid" type="number" @bind="entryarg"
                placeholder="enter id" style="width:100px;" />&nbsp;&nbsp;
        <button type="submit" class="btn btn-outline-secondary rounded-pill"
                    @onclick="GetByID">Fetch By Entry</button>
        <br/><br/>
        <label for="selectid">Select a region:</label>&nbsp;&nbsp;
        <select id="selectid" @bind="selectarg" style="width:100px;">
            <option value="0">... select</option>
            @foreach(var item in regionList)
            {
                <option value="@item.RegionID">@item.RegionDescription</option>
            }
        </select>&nbsp;&nbsp;
        <button type="submit" class="btn btn-outline-secondary rounded-pill"
                @onclick="GetBySelection">
            Fetch By Selection
        </button>
    </div>
    <div class="col-md-6">
        <!-- this column will hold the query result output
                no output attempt will be done unless the page actaully
                has something to display
        -->
        <p>Results of the query</p>
        <br /><br />
        @if (info != null)
        {
            <p>Region ID: @info.RegionID</p>
            <p>Region Description: @info.RegionDescription</p>
        }
    </div>
</div>

@code {
    private string feedBackMsg = "";
    private List<string> errorMsgs = new List<string>();

    //variables for the input controls
    private int entryarg = 0;
    private int selectarg = 0;

    //variable to hold output data from query
    Region info = null;

    //inject services for Region
    [Inject]
    private RegionServices _regionServices { get; set; }
    private List<Region> regionList = new List<Region>(); //cannot be null as the select loop
                                                          //  must have the instance present
                                                          //  even if it is empty

    protected override void OnInitialized()
    {
        //need this method as the select collection needs to exist as the page
        //  first appears
        //consume a Region service
        regionList = _regionServices.Region_GetAll();
        base.OnInitialized();
    }
    private void GetByID()
    {
        feedBackMsg = "";
        errorMsgs.Clear();
        info = null;

        //validate the incoming argument value is correct
        if(entryarg <= 0)
        {
            errorMsgs.Add($"Your region id value {entryarg} is invalid. Must be greater than 0.");
        }

        //did you find any invalid data
        if (errorMsgs.Count == 0)
        {
            //at this point data appears to be good
            //consume a service and catch results
            info = _regionServices.Region_GetByID(entryarg);
            //check the results
            if(info == null)
            {
                feedBackMsg = $"There is no region data by the entered region argument value {entryarg}";
            }

        }
    }
    private void GetBySelection()
    {
        feedBackMsg = "";
        errorMsgs.Clear();
        info = null;

        //validate the incoming argument value is correct
        if (selectarg == 0)
        {
            errorMsgs.Add($"You must select a region to query.");
        }

        //did you find any invalid data
        if (errorMsgs.Count == 0)
        {
            //at this point data appears to be good
            //consume a service and catch results
            info = _regionServices.Region_GetByID(selectarg);
            //check the results
            if (info == null)
            {
                //since the select control is based on the database records
                //  it is highly unlikely you will ever get this message
                feedBackMsg = $"There is no region data for the selected region";
            }

        }
    }
}
